/* automatically generated by rust-bindgen */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ParserResult {}
#[test]
fn bindgen_test_layout_ParserResult() {
    assert_eq!(
        ::std::mem::size_of::<ParserResult>(),
        0usize,
        concat!("Size of: ", stringify!(ParserResult))
    );
    assert_eq!(
        ::std::mem::align_of::<ParserResult>(),
        1usize,
        concat!("Alignment of ", stringify!(ParserResult))
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Node {}
#[test]
fn bindgen_test_layout_Node() {
    assert_eq!(
        ::std::mem::size_of::<Node>(),
        0usize,
        concat!("Size of: ", stringify!(Node))
    );
    assert_eq!(
        ::std::mem::align_of::<Node>(),
        1usize,
        concat!("Alignment of ", stringify!(Node))
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Tokens {}
#[test]
fn bindgen_test_layout_Tokens() {
    assert_eq!(
        ::std::mem::size_of::<Tokens>(),
        0usize,
        concat!("Size of: ", stringify!(Tokens))
    );
    assert_eq!(
        ::std::mem::align_of::<Tokens>(),
        1usize,
        concat!("Alignment of ", stringify!(Tokens))
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Diagnostics {}
#[test]
fn bindgen_test_layout_Diagnostics() {
    assert_eq!(
        ::std::mem::size_of::<Diagnostics>(),
        0usize,
        concat!("Size of: ", stringify!(Diagnostics))
    );
    assert_eq!(
        ::std::mem::align_of::<Diagnostics>(),
        1usize,
        concat!("Alignment of ", stringify!(Diagnostics))
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Comments {}
#[test]
fn bindgen_test_layout_Comments() {
    assert_eq!(
        ::std::mem::size_of::<Comments>(),
        0usize,
        concat!("Size of: ", stringify!(Comments))
    );
    assert_eq!(
        ::std::mem::align_of::<Comments>(),
        1usize,
        concat!("Alignment of ", stringify!(Comments))
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct MagicComments {}
#[test]
fn bindgen_test_layout_MagicComments() {
    assert_eq!(
        ::std::mem::size_of::<MagicComments>(),
        0usize,
        concat!("Size of: ", stringify!(MagicComments))
    );
    assert_eq!(
        ::std::mem::align_of::<MagicComments>(),
        1usize,
        concat!("Alignment of ", stringify!(MagicComments))
    );
}
